services:
  rabbitmq:
    image: rabbitmq:4.0.5-management-alpine
    hostname: rabbitmq
    restart: always
    env_file: "vars_rabbitmq.env.example"      
    volumes:
      - ./rabbitmq-data:/var/lib/rabbitmq
  postgres:
    image: postgres:17.2
    restart: always
    hostname: postgres
    env_file: "vars_postgres.env.example"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
  backend1:
    build:
      context: /backend/
      dockerfile: Dockerfile-inner
    image: backend-inner
    restart: always
    env_file: "vars_backend.env.example"
  backend2:
    image: backend-inner
    restart: always
    env_file: "vars_backend.env.example"
  pinger:
    build:
      context: /pinger/
      dockerfile: Dockerfile-inner
    image: pinger-inner
    restart: always
    env_file: "vars_pinger.env.example"
  nginx:
    build:
      context: /nginx/
      dockerfile: Dockerfile
    hostname: nginx
    restart: always
  frontend:
    build:
      context: /frontend/
      dockerfile: Dockerfile
    image: frontend
    restart: always
    ports: 
      - 8080:8080
    
